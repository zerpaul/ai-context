(()=>{"use strict";var t={265:function(t,e,n){var a,o=this&&this.__createBinding||(Object.create?function(t,e,n,a){void 0===a&&(a=n);var o=Object.getOwnPropertyDescriptor(e,n);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,a,o)}:function(t,e,n,a){void 0===a&&(a=n),t[a]=e[n]}),r=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),i=this&&this.__importStar||(a=function(t){return a=Object.getOwnPropertyNames||function(t){var e=[];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[e.length]=n);return e},a(t)},function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n=a(t),i=0;i<n.length;i++)"default"!==n[i]&&o(e,t,n[i]);return r(e,t),e});Object.defineProperty(e,"__esModule",{value:!0}),e.activate=function(t){console.log("AI Context Extractor is now active");const e=s.commands.registerCommand("aicontext.extractFolder",(async(t,e)=>{try{if(e&&e.length>0){const t=e[0],n=c.dirname(t.fsPath),a=`selected_files_${(new Date).toISOString().replace(/[:.]/g,"-")}.txt`,o=c.join(n,a);return await f(e,o,n),void await u(a,o)}if(!t)return void s.window.showErrorMessage("Please select a file or folder to extract context from");if((await l.stat(t.fsPath)).isFile()){const e=c.dirname(t.fsPath),n=`single_file_${(new Date).toISOString().replace(/[:.]/g,"-")}.txt`,a=c.join(e,n);await f([t],a,e),await u(n,a)}else{const e=t.fsPath,n=`${c.basename(e)}_${(new Date).toISOString().replace(/[:.]/g,"-")}.txt`,a=c.join(e,n);await async function(t,e){await s.window.withProgress({location:s.ProgressLocation.Notification,title:"Extracting folder context...",cancellable:!0},(async n=>{let a="PROJECT METADATA\n===============\n";a+=`Project Root: ${t}\n`,a+=`Scan Date: ${(new Date).toISOString()}\n`;const o=await async function(t){const e=[];return await async function t(n){const a=await l.readdir(n,{withFileTypes:!0});for(const o of a){const a=c.join(n,o.name);o.isDirectory()&&!o.name.startsWith(".")&&"node_modules"!==o.name?await t(a):o.isFile()&&e.push(a)}}(t),e}(t);a+=`Total Files: ${o.length}\n\n`,n.report({message:"Building directory structure..."}),a+="DIRECTORY STRUCTURE\n==================\n";const r=new Map;o.forEach((e=>{const n=c.relative(t,c.dirname(e)),a=c.basename(e);r.has(n)||r.set(n,[]),r.get(n)?.push(a)}));for(const[t,e]of r)a+=t?`/${t}/\n`:"/\n",e.forEach((t=>{a+=`  └── ${t}\n`}));a+="\n",n.report({message:"Reading file contents..."}),a+="FILE CONTENTS\n=============\n\n";let i=0;for(const e of o)try{const r=await l.readFile(e,"utf8"),s="=".repeat(80);a+=`${s}\n`,a+=`Absolute Path: ${e}\n`,a+=`Relative Path: ${c.relative(t,e)}\n`,a+=`${s}\n\n`,a+=r,a+="\n\n",i++,n.report({message:`Processing files... (${i}/${o.length})`,increment:100/o.length})}catch(t){a+=`Error reading file ${e}: ${t}\n\n`}await l.writeFile(e,a,"utf8")}))}(e,a),await u(n,a)}}catch(t){s.window.showErrorMessage(`Error extracting context: ${t}`)}}));t.subscriptions.push(e)},e.deactivate=function(){};const s=i(n(398)),c=i(n(928)),l=i(n(943));async function f(t,e,n){await s.window.withProgress({location:s.ProgressLocation.Notification,title:"Extracting file context...",cancellable:!0},(async a=>{let o="FILE EXTRACTION\n===============\n";o+=`Root Path: ${n}\n`,o+=`Scan Date: ${(new Date).toISOString()}\n`,o+=`Total Files: ${t.length}\n\n`,o+="SELECTED FILES\n==============\n",t.forEach((t=>{o+=`${c.relative(n,t.fsPath)}\n`})),o+="\n",o+="FILE CONTENTS\n=============\n\n";let r=0;for(const e of t)try{const i=await l.readFile(e.fsPath,"utf8"),s="=".repeat(80);o+=`${s}\n`,o+=`Absolute Path: ${e.fsPath}\n`,o+=`Relative Path: ${c.relative(n,e.fsPath)}\n`,o+=`${s}\n\n`,o+=i,o+="\n\n",r++,a.report({message:`Processing files... (${r}/${t.length})`,increment:100/t.length})}catch(t){o+=`Error reading file ${e.fsPath}: ${t}\n\n`}await l.writeFile(e,o,"utf8")}))}async function u(t,e){if("Open File"===await s.window.showInformationMessage(`Successfully extracted context to ${t}`,"Open File")){const t=await s.workspace.openTextDocument(e);await s.window.showTextDocument(t)}}},398:t=>{t.exports=require("vscode")},943:t=>{t.exports=require("fs/promises")},928:t=>{t.exports=require("path")}},e={},n=function n(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={exports:{}};return t[a].call(r.exports,r,r.exports,n),r.exports}(265);module.exports=n})();