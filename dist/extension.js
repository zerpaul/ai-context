(()=>{"use strict";var e={265:function(e,t,n){var r,o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),i=0;i<n.length;i++)"default"!==n[i]&&o(t,e,n[i]);return a(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.activate=function(e){console.log("AI Context Extractor is now active");const t=s.commands.registerCommand("aicontext.extractFolder",(async e=>{if(e)try{const t=e.fsPath,n=`${c.basename(t)}_${(new Date).toISOString().replace(/[:.]/g,"-")}.txt`,r=c.join(t,n);if(await s.window.withProgress({location:s.ProgressLocation.Notification,title:"Extracting folder context...",cancellable:!0},(async e=>{let n="PROJECT METADATA\n===============\n";n+=`Project Root: ${t}\n`,n+=`Scan Date: ${(new Date).toISOString()}\n`;const o=await async function(e){const t=[];return await async function e(n){const r=await l.readdir(n,{withFileTypes:!0});for(const o of r){const r=c.join(n,o.name);o.isDirectory()&&!o.name.startsWith(".")&&"node_modules"!==o.name?await e(r):o.isFile()&&t.push(r)}}(e),t}(t);n+=`Total Files: ${o.length}\n\n`,e.report({message:"Building directory structure..."}),n+="DIRECTORY STRUCTURE\n==================\n";const a=new Map;o.forEach((e=>{const n=c.relative(t,c.dirname(e)),r=c.basename(e);a.has(n)||a.set(n,[]),a.get(n)?.push(r)}));for(const[e,t]of a)n+=e?`/${e}/\n`:"/\n",t.forEach((e=>{n+=`  └── ${e}\n`}));n+="\n",e.report({message:"Reading file contents..."}),n+="FILE CONTENTS\n=============\n\n";let i=0;for(const r of o)try{const a=await l.readFile(r,"utf8"),s="=".repeat(80);n+=`${s}\n`,n+=`Absolute Path: ${r}\n`,n+=`Relative Path: ${c.relative(t,r)}\n`,n+=`${s}\n\n`,n+=a,n+="\n\n",i++,e.report({message:`Processing files... (${i}/${o.length})`,increment:100/o.length})}catch(e){n+=`Error reading file ${r}: ${e}\n\n`}await l.writeFile(r,n,"utf8")})),"Open File"===await s.window.showInformationMessage(`Successfully extracted context to ${n}`,"Open File")){const e=await s.workspace.openTextDocument(r);await s.window.showTextDocument(e)}}catch(e){s.window.showErrorMessage(`Error extracting folder context: ${e}`)}else s.window.showErrorMessage("Please select a folder to extract context from")}));e.subscriptions.push(t)},t.deactivate=function(){};const s=i(n(398)),c=i(n(928)),l=i(n(943))},398:e=>{e.exports=require("vscode")},943:e=>{e.exports=require("fs/promises")},928:e=>{e.exports=require("path")}},t={},n=function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}(265);module.exports=n})();